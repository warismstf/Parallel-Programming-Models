#include <iostream>
#include <omp.h>

#define N 1000

using namespace std;

int main() {
  int A[N][N], B[N][N], C[N][N];

  // Initialize matrices A and B
  for (int i = 0; i < N; i++) {
    for (int j = 0; j < N; j++) {
      A[i][j] = i + j;
      B[i][j] = i - j;
      C[i][j] = 0;
    }
  }

  // Matrix multiplication using OpenMP
  #pragma omp parallel for
  for (int i = 0; i < N; i++) {
    for (int j = 0; j < N; j++) {
      for (int k = 0; k < N; k++) {
        C[i][j] += A[i][k] * B[k][j];
      }
    }
  }

  // Print the result matrix C
  for (int i = 0; i < N; i++) {
    for (int j = 0; j < N; j++) {
      cout << C[i][j] << " ";
    }
    cout << endl;
  }

  return 0;
}
